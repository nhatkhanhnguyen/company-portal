@using MediatR
@using CompanyPortal.CQRS.Products.Queries
@using CompanyPortal.CQRS.Categories.Commands

@inject IMediator Mediator

<div class="row">
    <div class="col-12">
        <h3>@Category.Name</h3>

        @((MarkupString)Category.Description)
        <div class="table-responsive mt-2">
            <table class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th>Mã sản phẩm</th>
                        <th>Tên sản phẩm</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Category.Products)
                    {
                        <tr>
                            <td>@product.ExternalId</td>
                            <td>@product.Name</td>
                            <td>
                                <LoadingButton IconCss="fa-solid fa-trash" ButtonCssClass="btn-danger" IsLoading="_isLoading" LoadingText="Đang tải" NormalText="Xóa" OnClick="() => ShowRemoveProductDialogAsync(product)" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@code {
    [CascadingParameter] IModalService Modal { get; set; } = default!;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public CategoryViewModel Category { get; set; } = default!;

    private string _errorMessage = string.Empty;
    private bool _isLoading;

    private async Task ShowRemoveProductDialogAsync(ProductViewModel product)
    {
        var parameters = new ModalParameters().Add("Product", product);
        var options = new ModalOptions
            {
                Size = ModalSize.Custom,
                SizeCustomClass = "blazored-modal-fixed-size-large",
            };
        var modalResult = await Modal.Show<RemoveProductDialog>("Gỡ sản phẩm", parameters).Result;
        if (modalResult.Confirmed)
        {
            var result = await Mediator.Send(new UncategoriseProductCommand(product.Id));
            if (result.IsError)
            {
                Category.Products.Remove(product);
            }
            else
            {
                Modal.Show<ErrorDialog>("Có lỗi xảy ra!", new ModalParameters().Add("ErrorMessage", $"Có lỗi xảy ra khi xóa sản phẩm {product.Name} khỏi danh mục {Category.Name}."));
            }
        }
    }
}
