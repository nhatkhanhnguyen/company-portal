@using Syncfusion.Blazor.RichTextEditor

<ModalDialog>
    <Header>
        <h5 class="modal-title">@(Category.Id > 0 ? "CHỈNH SỬA DANH MỤC" : "THÊM DANH MỤC") </h5>
        <button type="button" class="btn-close" aria-label="Close" @onclick="() => BlazoredModal.CancelAsync()"></button>
    </Header>
    <Body>
        <EditForm Model="Category" OnValidSubmit="SubmitAsync" id="FormCategory" class="row g-3">
            <FluentValidationValidator ValidatorType="typeof(CategoryFormValidator)" />
            <fieldset>
                <div class="col-12 mb-3">
                    <Label For="@(() => Category.Image)" CssClass="form-label"></Label>
                    <FileUploader @bind-File="Category.Image" ButtonText="Chọn ảnh" Id="fileUploader" AcceptFileExtensions=".jpg,.png" AllowMultiple="false" ShowPreview></FileUploader>
                    <ValidationMessage For="@(() => Category.Image)" />
                </div>
                <div class="col-12 mb-3">
                    <Label For="@(() => Category.Name)" CssClass="form-label"></Label>
                    <InputText class="form-control" maxlength="100" @bind-Value="Category.Name"/>
                    <ValidationMessage For="@(() => Category.Name)"/>
                </div>
                <div class="col-12 mb-3">
                    <Label For="@(() => Category.ExternalId)" CssClass="form-label"></Label>
                    <InputText class="form-control" maxlength="20" @bind-Value="Category.ExternalId"/>
                    <ValidationMessage For="@(() => Category.ExternalId)"/>
                </div>
                <div class="col-12 mb-3">
                    <Label For="@(() => Category.Description)" CssClass="form-label"></Label>
                    <SfRichTextEditor ID="descriptionEditor" MaxLength="500" @bind-Value="Category.Description" Height="400">
                        <RichTextEditorToolbarSettings Items="@_descriptionEditorTools"/>
                    </SfRichTextEditor>
                    <ValidationMessage For="@(() => Category.Description)"/>
                </div>
                <div class="col-12">
                    <div class="form-check d-flex">
                        <InputCheckbox @bind-Value="Category.MarkedAsInactive" class="form-check-input align-self-baseline"/>
                        <span class="form-check-label ms-2">
                            <Label For="@(() => Category.MarkedAsInactive)" CssClass="form-label"></Label>
                        </span>
                    </div>
                </div>
            </fieldset>
        </EditForm>
    </Body>
    <Footer>
        <div class="row">
            <div class="col-12">
                <LoadingButton Type="submit" IconCss="fa-solid fa-floppy-disk" ForForm="FormCategory" ButtonCssClass="btn-primary rounded-pill me-2"
                               LoadingText="ĐANG LƯU" NormalText="LƯU" />
                <button type="button" class="btn btn-danger rounded-pill" @onclick="() => BlazoredModal.CancelAsync()"><i class="fa-solid fa-xmark"></i> HỦY</button>
            </div>
        </div>
    </Footer>
</ModalDialog>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public CategoryViewModel Category { get; set; } = default!;
    private readonly List<ToolbarItemModel> _descriptionEditorTools = DataGrid.ContentEditorTools;

    private Task SubmitAsync()
    {
        Category.IsActive = !Category.MarkedAsInactive;
        return BlazoredModal.CloseAsync(ModalResult.Ok(Category));
    }
}
