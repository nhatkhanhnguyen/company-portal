@using MediatR
@using CompanyPortal.CQRS.Products.Commands

@inject IMediator Mediator

<p>Bạn có chắc là muốn xóa sản phẩm <b>@Product.Name</b> với mã sản phẩm <b>@Product.ExternalId</b>.</p>
<p>Mặc định, sản phẩm sẽ bị <b>ẨN</b> khỏi trang sản phẩm của người dùng và có thể <b>HIỆN</b> lại bằng cách vào hộp thoại CHỈNH SỬA</p>
<InputCheckbox @bind-Value="_forceDelete" /> Xóa ra khỏi hệ thống (không thể phục hồi).

<hr />
<div class="row">
    <div class="col-12 d-flex justify-content-end">
        <LoadingButton IconCss="fa-solid fa-trash" ButtonCssClass="btn-danger rounded-pill me-2" IsLoading="_isLoading" LoadingText="ĐANG XÓA" NormalText="CHẮC CHẮN" @onclick="() => DeleteAsync(_forceDelete)" />
        <button class="btn btn-info rounded-pill" @onclick="() => BlazoredModal.CancelAsync()"><i class="fa-solid fa-xmark"></i> KHÔNG</button>
    </div>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public ProductViewModel Product { get; set; } = new();

    private bool _isLoading;
    private bool _forceDelete;

    private async Task DeleteAsync(bool forceDelete)
    {
        _isLoading = true;
        await BlazoredModal.CloseAsync(ModalResult.Ok(forceDelete));
        _isLoading = false;
    }
}