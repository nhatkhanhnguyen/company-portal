@using CompanyPortal.CQRS.Orders.Commands
@using CompanyPortal.CQRS.Orders.Queries
@using CompanyPortal.Core.Common
@using CompanyPortal.Core.Enums
@using CompanyPortal.Core.Extensions
@using System.Globalization
@using MediatR

@inject IMediator Mediator

<ModalDialog SizeClass="modal-xl">
    <Header>
        <h5 class="modal-title">THÔNG TIN ĐƠN HÀNG</h5>
        <button type="button" class="btn-close" aria-label="Close" @onclick="Cancel"></button>
    </Header>
    <Body>
        <div class="row mb-3">
            <div class="col-sm-12 col-md-6">
                <p><b>Mã đơn hàng: </b>@Order.ExternalId</p>
                <p><b>Ngày giờ đặt: </b>@Order.DateCreated.ToString("G")</p>
                <p><b>Họ tên: </b>@Order.Fullname</p>
            </div>
            <div class="col-sm-12 col-md-6">
                <p><b>Địa chỉ: </b>@Order.Address</p>
                <p><b>Email: </b>@Order.Email</p>
                <p><b>Số điện thoại: </b>@Order.PhoneNumber</p>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-12">
                <div class="table-responsive">
                    @if (_isLoading)
                    {
                        <Spinner></Spinner>
                    }
                    else
                    {
                        <table class="table table-striped table-hover align-middle">
                            <thead>
                                <tr>
                                    <th class="text-center" colspan="4">CHI TIẾT ĐƠN HÀNG</th>
                                </tr>
                            </thead>
                            <tbody class="table-group-divider">

                                @if (Order.OrderDetails.Any())
                                {
                                    foreach (var orderDetail in Order.OrderDetails)
                                    {
                                        <tr>
                                            <td width="150px">
                                                <img src="@orderDetail.ProductImageUrl" alt="@orderDetail.ProductName" class="img-fluid" />
                                            </td>
                                            <td>
                                                <b>@orderDetail.ProductName</b>
                                            </td>
                                            <td>
                                                Số lượng: <b>@orderDetail.Quantity</b>
                                            </td>
                                            <td>
                                                Tổng: <b>@orderDetail.Total.ToString("C", CultureInfo.GetCultureInfo("vi-vn"))</b>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center">KHÔNG CÓ SẢN PHẨM</td>
                                    </tr>
                                }
                            </tbody>
                            @if (Order.OrderDetails.Any())
                            {
                                <tfoot class="table-group-divider">
                                    <tr>
                                        <td colspan="2"><b>TỔNG</b></td>
                                        <td>
                                            Số lượng: <b>@Order.OrderDetails.Sum(x => x.Quantity)</b>
                                        </td>
                                        <td>
                                            Tổng: <b>@Order.Total.ToString("C", CultureInfo.GetCultureInfo("vi-vn"))</b>
                                        </td>
                                    </tr>
                                </tfoot>
                            }
                        </table>
                    }
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-12">
                <p class="fw-bold text-center">TRẠNG THÁI ĐƠN HÀNG</p>
                <div class="progress rounded-pill mb-2" role="progressbar" aria-label="Basic example" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="height: 30px">
                    <div class="progress-bar progress-bar-striped progress-bar-animated bg-warning" style="width: @Order.Progress"></div>
                </div>
                <div class="row">
                    @foreach (var item in _orderStatuses)
                    {
                        <div class="col-2 text-center text-wrap">@item.DisplayName</div>
                    }
                </div>
            </div>
        </div>
    </Body>
    <Footer>
        <div class="row">
            <div class="col-12 d-flex justify-content-end">
                <div class="dropdown me-2">
                    <button class="btn btn-info rounded-pill" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        CHUYỂN TRẠNG THÁI <i class="fa-solid fa-circle-chevron-down"></i>
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (var status in _orderStatuses)
                        {
                            <li><a class="dropdown-item" @onclick="() => ChangeStatus(status.Value)"><i class="@status.Icon me-1"></i> @status.DisplayName</a></li>
                        }
                    </ul>
                </div>
                <button type="button" class="btn btn-success rounded-pill" @onclick="Cancel"><i class="fa-solid fa-xmark"></i> ĐÓNG</button>
            </div>
        </div>
    </Footer>
</ModalDialog>

<style>
    .table img {
        width: 100px
    }

    li a svg {
        width: 24px;
    }
</style>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public OrderViewModel Order { get; set; } = default!;

    private readonly List<EnumToRecord<OrderStatus>> _orderStatuses = EnumExtensions.GetEnumToRecords<OrderStatus>();

    private bool _isLoading = true;
    private bool _hasChanges;

    private void Cancel() => BlazoredModal.CancelAsync(_hasChanges);

    private async void ChangeStatus(OrderStatus status)
    {
        _isLoading = true;
        var result = await Mediator.Send(new UpdateOrderStatusCommand(Order.Id, status));
        if (result.IsSuccess)
        {
            Order.Status = status;
            _hasChanges = true;
        }
        _isLoading = false;
        StateHasChanged();
    }
}
