@using CompanyPortal.Core.Common
@using CompanyPortal.Core.Enums
@using CompanyPortal.Core.Extensions
@using System.Globalization

<ModalDialog SizeClass="modal-xl">
    <Header>
        <h5 class="modal-title">@(Order.Id > 0 ? "CHỈNH SỬA ĐƠN HÀNG" : "TẠO ĐƠN HÀNG")</h5>
        <button type="button" class="btn-close" aria-label="Close" @onclick="() => BlazoredModal.CancelAsync()"></button>
    </Header>
    <Body>
        <EditForm Model="Order" OnValidSubmit="Submit" id="FormOrder" class="row g-3">
            <fieldset class="col-12">
                <FluentValidationValidator ValidatorType="typeof(OrderFormValidator)" />
                <div class="row">
                    <div class="col-lg-6 col-sm-12 mb-3">
                        <Label For="@(() => Order.ExternalId)" CssClass="form-label"></Label>
                        <label class="form-control">@Order.ExternalId</label>
                        <ValidationMessage For="@(() => Order.ExternalId)" />
                    </div>
                    <div class="col-lg-6 col-sm-12 mb-3">
                        <Label For="@(() => Order.Status)" CssClass="form-label"></Label>
                        <SfComboBox TValue="OrderStatus" TItem="EnumToRecord<OrderStatus>" @bind-Value="Order.Status" class="form-control" DataSource="_orderStatus">
                            <ComboBoxFieldSettings Value="Value" Text="DisplayName"></ComboBoxFieldSettings>
                        </SfComboBox>
                        <ValidationMessage For="@(() => Order.Status)" />
                    </div>
                    <div class="col-sm-12 col-md-6 mb-3">
                        <Label For="@(() => Order.Fullname)" CssClass="form-label"></Label>
                        <InputText class="form-control" maxlength="100" @bind-Value="Order.Fullname" />
                        <ValidationMessage For="@(() => Order.Fullname)" />
                    </div>
                    <div class="col-sm-12 col-md-6 mb-3">
                        <Label For="@(() => Order.PhoneNumber)" CssClass="form-label"></Label>
                        <InputText class="form-control" maxlength="100" @bind-Value="Order.PhoneNumber" />
                        <ValidationMessage For="@(() => Order.Fullname)" />
                    </div>
                    <div class="col-12 mb-3">
                        <Label For="@(() => Order.Email)" CssClass="form-label"></Label>
                        <InputText class="form-control" maxlength="100" @bind-Value="Order.Email" />
                        <ValidationMessage For="@(() => Order.Fullname)" />
                    </div>
                    <div class="col-12 mb-3">
                        <Label For="@(() => Order.Address)" CssClass="form-label"></Label>
                        <InputText class="form-control" maxlength="100" @bind-Value="Order.Address" />
                        <ValidationMessage For="@(() => Order.Fullname)" />
                    </div>

                    <div class="col-12 table-responsive mb-3">
                        <table class="table table-striped table-hover align-middle">
                            <thead>
                                <tr>
                                    <th class="text-center" colspan="4">CHI TIẾT ĐƠN HÀNG</th>
                                </tr>
                            </thead>
                            <tbody class="table-group-divider">

                                @if (Order.OrderDetails.Any())
                                {
                                    @foreach (var orderDetail in Order.OrderDetails)
                                    {
                                        <tr>
                                            <td width="150px">
                                                <img src="@orderDetail.ProductImageUrl" alt="@orderDetail.ProductName" class="img-fluid" />
                                            </td>
                                            <td>
                                                <b>@orderDetail.ProductName</b>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-text" id="inputGroup-sizing-default">Số lượng:</span>
                                                    <InputNumber @bind-Value="orderDetail.Quantity" class="form-control" min="1" />
                                                </div>
                                            </td>
                                            <td>
                                                Tổng: <b>@orderDetail.Total.ToString("C", CultureInfo.GetCultureInfo("vi-vn"))</b>
                                            </td>
                                            <td>
                                                <button class="btn btn-danger btn-sm rounded-pill" @onclick="() => RemoveOrderDetail(orderDetail)"><i class="fa-solid fa-trash"></i> Xóa</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center">KHÔNG CÓ SẢN PHẨM</td>
                                    </tr>
                                }
                            </tbody>
                            @if (Order.OrderDetails.Any())
                            {
                                <tfoot class="table-group-divider">
                                    <tr>
                                        <td colspan="2"><b>TỔNG</b></td>
                                        <td>
                                            Số lượng: <b>@Order.OrderDetails.Sum(x => x.Quantity)</b>
                                        </td>
                                        <td>
                                            Tổng: <b>@Order.Total.ToString("C", CultureInfo.GetCultureInfo("vi-vn"))</b>
                                        </td>
                                    </tr>
                                </tfoot>
                            }
                        </table>
                    </div>
                    <div class="col-12 mb-3 d-flex justify-content-end">
                        <div class="form-check d-flex ">
                            <InputCheckbox @bind-Value="Order.MarkedAsInactive" class="form-check-input align-self-baseline" />
                            <span class="form-check-label ms-2">
                                <Label For="@(() => Order.MarkedAsInactive)" CssClass="form-label"></Label>
                            </span>
                        </div>
                    </div>
                </div>
            </fieldset>
        </EditForm>
    </Body>
    <Footer>
        <div class="row">
            <div class="col-12">
                <LoadingButton Type="submit" IconCss="fa-solid fa-floppy-disk" ForForm="FormOrder" ButtonCssClass="btn-primary rounded-pill me-2" LoadingText="ĐANG LƯU" NormalText="LƯU" />
                <button type="button" class="btn btn-success rounded-pill" @onclick="Cancel"><i class="fa-solid fa-xmark"></i> ĐÓNG</button>
            </div>
        </div>
    </Footer>
</ModalDialog>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public OrderViewModel Order { get; set; } = new();
    private readonly List<EnumToRecord<OrderStatus>> _orderStatus = EnumExtensions.GetEnumToRecords<OrderStatus>();

    private void Cancel() => BlazoredModal.CancelAsync();

    private void Submit()
    {
        Order.IsActive = !Order.MarkedAsInactive;
        BlazoredModal.CloseAsync(ModalResult.Ok<OrderViewModel>(Order));
    }

    private void RemoveOrderDetail(OrderDetailViewModel orderDetail)
    {
        Order.OrderDetails.Remove(orderDetail);
    }
}